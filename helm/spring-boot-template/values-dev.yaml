# Geliştirme ortamı için replica sayısı
replicaCount: 1  # Geliştirme ortamı için genellikle 1 replika yeterlidir.

image:
  # Yerel ortam için Docker image'ınızın adı
  repository: spring-boot-template-dev
  # Geliştirme sürümü; genellikle "latest" kullanılır.
  tag: "latest"
  # Image çekme politikası: Eğer image yerelde mevcutsa yeniden çekmez.
  pullPolicy: IfNotPresent

service:
  # Geliştirme ortamında genellikle ClusterIP kullanılır.
  type: ClusterIP
  # Servisin expose edileceği port.
  port: 8080

ingress:
  enabled: true
  # Ingress için kullanılacak sınıf, örneğin "nginx".
  className: "nginx"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    # SSL yönlendirmesi, geliştirme ortamında kapalı kalabilir.
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: dev.example.com  # Geliştirme ortamına ait domain; DNS/hosts ayarlarınıza göre.
      paths:
        - path: /
          pathType: Prefix

spring:
  profiles:
    active: dev  # Aktif Spring profili: dev
  datasource:
    # Geliştirme veritabanı bağlantı URL'si; yerel olarak çalışan MySQL veritabanı.
    url: jdbc:mysql://localhost:3306/employee_dev_db?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
    username: dev_employee_user  # Geliştirme için veritabanı kullanıcı adı
    password: dev_employee_pass  # Geliştirme için veritabanı şifresi

resources:
  limits:
    cpu: "100m"       # Örneğin: 100m CPU limiti
    memory: "128Mi"   # 128 MiB bellek limiti
  requests:
    cpu: "50m"        # Minimum 50m CPU isteği
    memory: "64Mi"    # Minimum 64 MiB bellek isteği
